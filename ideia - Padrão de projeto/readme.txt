Todo listener e toda função assíncrona chame uma função de callback

os parâmetros não obrigatórios serem dentro de um objeto (options)

Dentro de uma pasta com um index exportando o componente

Talvez uma informação não deva ser diretamente direcionada aos destinos e sim seguir o fluxo de dados até lá. Explicação: 
Em algum momento podemos interceptar a informação e manipulá-la.

ponto o tipo do componente, por exemplo feed.stack.js

composição

imutabilidade

funções puras

valor padrão para os parâmetros

classificar serviços, componentes...

seletor js nunca ser classe - classes nomeiam o componente e podem ser mudadas, usar data-js ou data-component

seletores css e js devem sempre buscar dentro da raíz do componente el.querySelector no js

media query central com sobrescritas para cada lado

try catch em toda aplicação

nomenclatura de elementos com elAlguma coisa

desvincular ponteiros para o gc limpar, não salvar array de estados nem ficar fazendo setinterval com elementos que n usará

desvincular listeners para o gc

função de evento se chamar onAlgumacoisa

funções primeiro, variáveis depois, chamadas depois

apelidar a classe do componentes para internamente trabalhar com o nome reduzido exemplo: class=spin-images

uma função retornar todos os seus métodos para reuso sem perder o valor interno